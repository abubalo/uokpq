paths:
  /users:
    post:
      summary: Create a new user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  example: password123
      responses:
        '201':
          description: User created successfully
        '400':
          description: Bad request

    get:
      summary: Get all users
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users retrieved successfully
        '401':
          description: Unauthorized

  /users/login:
    post:
      summary: Login a user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: User logged in successfully
        '401':
          description: Unauthorized

  /users/logout:
    post:
      summary: Logout a user
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User logged out successfully
        '401':
          description: Unauthorized

  /users/{id}:
    get:
      summary: Get a user by ID
      tags: [Users]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User retrieved successfully
        '404':
          description: User not found

    put:
      summary: Update a user by ID
      tags: [Users]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  example: newpassword123
      responses:
        '200':
          description: User updated successfully
        '400':
          description: Bad request

    delete:
      summary: Delete a user by ID
      tags: [Users]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT